password_server

Endpoint PasswordServer;

Struct passKey {
    Text hashed_password;
    Text encryptKey;
    Text cert;
    Number salt;
    Text type;//need to implement
}

PasswordServer {
    Endpoint CA;
    Map(from: Text, to: Struct passKey) database;
    Map(from: Text, to: Endpoint) users;
    Function (in: Map(from: Text, to: Text); returns: Nothing) save_database;
    Function (in: Text, Number; returns: Text) hasher;
    onCreate (Endpoint CA_pt, Map(from: Text, to: Text) existing_users, Function (in: Map(from: Text, to: Text); returns: Nothing) save, Function(in: Text, Number; returns: Text) hash_fn) {
        CA = CA_pt;
        database = existing_users;
        save_database = save;
        hasher = hash_fn;
    }

    Public Function change_password (Text username, Text encrypted_key, Text hashed_pw) {
        database[username].encryptKey = encrypted_key;
        database[username].hashed_password = hashed_pw;
    }

    Public Function close() {
        save_database(database);
    }

    Public Function register_user (Text username, Text hashed_password, Text encrypt_key, Text request, Number salt) {
        Struct passKey pk;
        pk.hashed_password = hashed_password;
        pk.encryptKey = encrypt_key;
        print("about to create cert");
        pk.cert =  CA.req_to_cert(request);
        print("certificate created");
        pk.salt = salt;
        database[username] = pk;
    }

    Public Function get_salt(Text username) returns Number {
        return database[username].salt;
    }

    Public Function get_certificate(Text username) returns Text{
        return database[username].cert;
    }

    Public Function check_user (Text username) returns TrueFalse{
        return username in database;
    }

    Public Function get_encrypted_key (Text username, Text password) returns Text{
        if (username in database) {
            if (database[username].hashed_password == hasher(password, database[username].salt)) {
                return database[username].encryptKey;
            }
        }
        return "";
    }
}
