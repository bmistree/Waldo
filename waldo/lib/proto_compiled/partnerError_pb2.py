# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: partnerError.proto

from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)


import util_pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='partnerError.proto',
  package='',
  serialized_pb='\n\x12partnerError.proto\x1a\nutil.proto\"C\n\x0cPartnerError\x12\x19\n\nevent_uuid\x18\x01 \x02(\x0b\x32\x05.UUID\x12\x18\n\thost_uuid\x18\x02 \x02(\x0b\x32\x05.UUID')




_PARTNERERROR = _descriptor.Descriptor(
  name='PartnerError',
  full_name='PartnerError',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='event_uuid', full_name='PartnerError.event_uuid', index=0,
      number=1, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='host_uuid', full_name='PartnerError.host_uuid', index=1,
      number=2, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  serialized_start=34,
  serialized_end=101,
)

_PARTNERERROR.fields_by_name['event_uuid'].message_type = util_pb2._UUID
_PARTNERERROR.fields_by_name['host_uuid'].message_type = util_pb2._UUID
DESCRIPTOR.message_types_by_name['PartnerError'] = _PARTNERERROR

class PartnerError(_message.Message):
  __metaclass__ = _reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _PARTNERERROR

  # @@protoc_insertion_point(class_scope:PartnerError)


# @@protoc_insertion_point(module_scope)
